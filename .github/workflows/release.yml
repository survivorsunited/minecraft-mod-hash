name: CI & Release

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4


      - name: Run all test scripts
        shell: pwsh
        run: |
          ./run-tests.ps1

  release:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: windows-latest
    permissions:
      contents: write
      actions: read
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # PowerShell Core is already available on Windows runners

      - name: Run release build
        id: release_build
        shell: pwsh
        run: |
          # Generate clean version folder and filenames
          $releaseVersion = Get-Date -Format "yyyy.M.d-HHmmss"
          $releaseFolder = Join-Path "./dist" $releaseVersion
          if (-not (Test-Path $releaseFolder)) {
              New-Item -ItemType Directory -Path $releaseFolder -Force | Out-Null
          }
          Write-Host "Creating version $releaseVersion" -ForegroundColor Green
          ./hash.ps1 -UpdateConfig -CreateZip -OutputPath "$releaseFolder" -ModsPath ./tests/mods
          # Set the tag to the release version
          $tag = $releaseVersion
          echo "tag=$tag" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Create git tag
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const tag = '${{ steps.release_build.outputs.tag }}';
            try {
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${tag}`,
                sha: context.sha
              });
              console.log(`Created tag: ${tag}`);
            } catch (error) {
              console.log(`Tag creation failed: ${error.message}`);
            }

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release_build.outputs.tag }}
          name: ${{ steps.release_build.outputs.tag }}
          files: ./dist/${{ steps.release_build.outputs.tag }}/*
          generate_release_notes: true 